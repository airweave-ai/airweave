---
description: General overview of Airweave.
globs: **/*
alwaysApply: true
---
# Airweave Overview

## What is Airweave?

Airweave is an open-source platform that makes **any app searchable for your agent** by syncing data from various sources with minimal configuration for agentic search. It serves as a bridge between your data sources and agents, transforming raw data into queryable knowledge.

> There is an adjacent repository called `infra-core` which manages all the infrastructure.

## Architecture
- Monorepo: Python FastAPI backend + React/TypeScript frontend + Python Temporal workers + Node.js MCP server
- Data Flow: Sources → Processing → Vector/Graph DBs → Agent Queries
- MCP Integration: Express/SSE server for cloud-based AI assistants (OpenAI Agent Builder, etc.)
- Tested with Monke (internal E2E testing framework)

## Technical Capabilities
- Data synchronization configuration via UI or API
- Multi-tenant architecture with OAuth2
- Entity extraction and transformation pipeline
- Sync triggers: manual, scheduled, or API-driven
- Incremental updates using content hashing
- Scales from local development to production environments

## Data Sources
Airweave can extract and process data from:
- API endpoints (REST) / Productivity and collaboration tools
- Relational databases
- Document stores
- File systems and storage services


## Technology Implementation
- Backend: FastAPI with PostgreSQL metadata store
- Frontend: React/TypeScript with ShadCN components
- MCP Server: Node.js/Express with SSE transport for AI assistant integration
- Storage: Qdrant (will add more, DWH-type storage later)
- Deployment: Docker Compose (dev), Kubernetes (prod)
- Processing: Async workers with Temporal
- Messages: Redis PubSub
- Documentation: Fern

## For Developers
- Local setup uses Docker Compose
- Prod setup with Kubernetes (upcoming)
- Configuration via environment variables
- Extensible for custom sources and destinations
